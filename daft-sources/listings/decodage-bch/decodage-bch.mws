{VERSION 5 0 "IBM INTEL NT" "5.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "2D Comment" 2 18 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "Helvetica" 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 257 "Helvetica" 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 258 "Helvetica" 1 14 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 259 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
260 "Helvetica" 1 14 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 261 "
" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 262 "Helvetica" 0 1 
0 0 0 0 0 1 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 263 "" 0 1 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 264 "Helvetica" 0 1 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 }{CSTYLE "" -1 265 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{PSTYLE "
Normal" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 
1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Maple Output" -1 11 1 
{CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }3 3 0 0 0 
0 1 0 1 0 2 2 0 1 }{PSTYLE "Maple Output" -1 12 1 {CSTYLE "" -1 -1 "Ti
mes" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }1 3 0 0 0 0 1 0 1 0 2 2 0 1 }
{PSTYLE "Normal" -1 256 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 
2 2 2 1 1 1 1 }3 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Normal" -1 257 1 
{CSTYLE "" -1 -1 "Times" 1 14 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }3 1 0 0 0 
0 1 0 1 0 2 2 0 1 }}
{SECT 0 {EXCHG {PARA 0 "" 0 "" {TEXT -1 81 "Proc\351dure FFT (ne fait \+
pas partie du script, mais de celui \"fft-corps-fini.dsw\")." }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 363 "p := 2:\nTFD := proc(f, sig
ne)\n     local res, formule;\n     # pour plus de lisibilit\351, on \+
\351crit \340 part la formule de TFD :\n     formule := 'f[l+1]*( Norm
al( alpha^(signe*(k-1)*l) ) mod 2)';\n     res := [ seq( Normal( sum( \+
formule, 'l'=0..n-1 ) ) mod p , k=1..n)  ];     \n     if signe=-1 the
n res := 1/n*res mod p end if;\n     RETURN(Normal(res) mod p);\nend p
roc:" }}}{EXCHG {PARA 257 "" 0 "" {TEXT -1 0 "" }{TEXT 263 0 "" }
{TEXT 264 15 "Debut du script" }}}{EXCHG {PARA 0 "" 0 "" {XPPEDIT 18 
0 "r;" "6#%\"rG" }{TEXT -1 40 " : degr\351s des facteurs irr\351ductib
les de " }{XPPEDIT 18 0 "X^n-1;" "6#,&)%\"XG%\"nG\"\"\"F'!\"\"" }
{TEXT -1 5 " sur " }{XPPEDIT 18 0 "F[2];" "6#&%\"FG6#\"\"#" }{TEXT -1 
3 " ; " }{XPPEDIT 18 0 "t;" "6#%\"tG" }{TEXT -1 26 " : capacit\351 de \+
correction." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 61 "with(numtheo
ry): with(linalg):\nn := 15: t := 3: delta:=2*t+1:" }}}{EXCHG {PARA 0 
"" 0 "" {TEXT -1 22 "Liste des facteurs de " }{XPPEDIT 18 0 "X^n-1;" "
6#,&)%\"XG%\"nG\"\"\"F'!\"\"" }{TEXT -1 41 "choix d'un facteur irr\351
ductible de degr\351 " }{XPPEDIT 18 0 "r;" "6#%\"rG" }{TEXT -1 52 " et
 de la racine primive associ\351e :\nOn constate que " }{XPPEDIT 18 0 
"r;" "6#%\"rG" }{TEXT -1 21 " est bien l'ordre de " }{XPPEDIT 18 0 "p;
" "6#%\"pG" }{TEXT -1 14 " dans (Z/nZ)*." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 87 "liste_div := op(Factor( X^n-1 ) mod 2 ):\nP := liste_
div[2];\nalias( alpha = RootOf(P) ):" }}{PARA 11 "" 1 "" {XPPMATH 20 "
6#>%\"PG,(*$)%\"XG\"\"%\"\"\"F**$)F(\"\"$F*F*F*F*" }}}{EXCHG {PARA 0 "
" 0 "" {TEXT -1 61 "Calcule le polyn\364me g\351n\351rateur du code de
 distance prescrite " }{XPPEDIT 18 0 "2*t+1;" "6#,&*&\"\"#\"\"\"%\"tGF
&F&F&F&" }{TEXT -1 37 ", le PPCM des polyn\364mes minimaux des " }
{XPPEDIT 18 0 "alpha^i;" "6#)%&alphaG%\"iG" }{TEXT -1 7 ", pour " }
{XPPEDIT 18 0 "i = 1;" "6#/%\"iG\"\"\"" }{TEXT -1 5 " ... " }{XPPEDIT 
18 0 "2*t;" "6#*&\"\"#\"\"\"%\"tGF%" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 509 "calc_gen := proc()\n        local result, Q, i, list
e_pol_rest: \n        result := P: # on sait d\351j\340 que P est dans
 le PPCM\n        liste_pol_rest := \{liste_div\} minus \{P\}:\n      \+
  # alpha^2 est racine de P, donc on peut le sauter\n        for i fro
m 3 to 2*t do  \n        for Q in liste_pol_rest do\n        if Eval(Q
, X=alpha^i) mod 2 = 0 then\n        result := result*Q:\n        list
e_pol_rest:=liste_pol_rest minus \{Q\}: break:\n        end if: end do
: end do:\n        result := Expand(result) mod 2\n end proc:" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 42 "Polyn\364me g\351n\351rateur et di
mension du code :" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "G := s
ort( calc_gen() ); d := n - degree(G);" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#>%\"GG,0*$)%\"XG\"#5\"\"\"F**$)F(\"\"*F*F**$)F(\"\")F*F**$)F(\"
\"'F*F**$)F(\"\"&F*F**$)F(\"\"#F*F*F*F*" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#>%\"dG\"\"&" }}}{EXCHG {PARA 256 "" 0 "" {TEXT 256 31 "[...] Sui
te du script pr\351c\351dent" }{TEXT -1 0 "" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT -1 25 "Calcule le mot de taille " }{XPPEDIT 18 0 "n;" "6#%\"nG
" }{TEXT -1 53 " (liste de 0/1) correspondant \340 un polyn\364me de d
egr\351 " }{XPPEDIT 18 0 "n-1;" "6#,&%\"nG\"\"\"F%!\"\"" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "Mot := proc(Q)\n    [seq( coeff(Q, \+
X,it), it=0..n-1 )]\nend proc:" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 29 
"Calcule le polyn\364me de degr\351 " }{XPPEDIT 18 0 "n-1;" "6#,&%\"nG
\"\"\"F%!\"\"" }{TEXT -1 34 " correspondant \340 un mot de taille " }
{XPPEDIT 18 0 "n;" "6#%\"nG" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
63 "Pol := proc(mot)\n     sum(mot[it]*X^(it-1), it=1..n);\nend proc:
" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 29 "Calcule le syndr\364me d'indi
ce " }{XPPEDIT 18 0 "i;" "6#%\"iG" }{TEXT -1 7 ", i.e. " }{XPPEDIT 18 
0 "P(alpha^i)" "6#-%\"PG6#)%&alphaG%\"iG" }{TEXT -1 2 " :" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 67 "Syndi := proc(pol, i)\n     Eval(po
l, X = alpha^i) mod 2;\nend proc: " }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 52 "Calcule un vecteur al\351atoire avec nb_erreurs erreurs" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 141 "Aleat := proc(nb_erreurs)\n
     local hasard:\n     hasard := rand(1..(n-1)):\n     Mot( add(X^ha
sard(), i=1..nb_erreurs) mod 2 );    \nend proc:" }}}{EXCHG {PARA 0 "
" 0 "" {TEXT -1 32 "Calcule un mot du code au hasard" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 119 "MotCode := proc()\n     local Q;\n     Q
 := Randpoly(d-1, X) mod 2;\n     Q := Expand( Q*G ) mod 2;\n     Mot(
Q);\nend proc:" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 39 "On simule une t
ransmition avec erreur :" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 94 
"mot_code := MotCode();\nmot_transmis := mot_code + Aleat(3) mod 2;\np
_recu := Pol(mot_transmis);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%)mot_
codeG71\"\"!\"\"\"F'F'F'F&F&F&F'F&F&F'F'F&F'" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#>%-mot_transmisG71\"\"!\"\"\"F'F'F'F&F&F&F'F&F&F&F&F&F&
" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%'p_recuG,,%\"XG\"\"\"*$)F&\"\"#F
'F'*$)F&\"\"$F'F'*$)F&\"\"%F'F'*$)F&\"\")F'F'" }}}{EXCHG {PARA 256 "" 
0 "" {TEXT 257 31 "[...] Suite du script pr\351c\351dent" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT 258 13 "1\350re partie :" }{TEXT 259 1 " " }
{TEXT -1 30 "R\351solution des \351quations pour " }{XPPEDIT 18 0 "i =
 n-t;" "6#/%\"iG,&%\"nG\"\"\"%\"tG!\"\"" }{TEXT -1 5 " ... " }
{XPPEDIT 18 0 "n-1;" "6#,&%\"nG\"\"\"F%!\"\"" }{TEXT -1 14 " pour trou
ver " }{XPPEDIT 18 0 "sigma;" "6#%&sigmaG" }{TEXT -1 8 "[1] ... " }
{XPPEDIT 18 0 "sigma;" "6#%&sigmaG" }{TEXT -1 3 "[t]" }}}{EXCHG {PARA 
0 "" 0 "" {TEXT -1 68 "Calcule de l'\351quation polynomiale \340 r\351
soudre (attention, on note la " }{XPPEDIT 18 0 "epsilon;" "6#%(epsilon
G" }{TEXT -1 1 " " }{TEXT 265 22 "transform\351e de Fourier" }{TEXT 
-1 15 " de l'erreur) :" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 139 "
eqn := ( 1 + add( sigma[i]*Z^i, i=1..t ) )*( add( epsilon[n-i]*Z^i, i=
1..n ) ):\neqn := rem(eqn,Z^n-1,Z,'q');  # l'\351quation est modulo Z^
n-1" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#>%$eqnG,F*&,**&&%&sigmaG6#\"\"
\"F,&%(epsilonG6#\"\"#F,F,*&&F*6#\"\"$F,&F.6#\"\"%F,F,&F.F+F,*&&F*F/F,
&F.F3F,F,F,)%\"ZG\"#9F,F,*&,**&F2F,&F.6#\"\"&F,F,F-F,*&F)F,F;F,F,*&F:F
,F5F,F,F,)F=\"#8F,F,*&,*F;F,*&F:F,FBF,F,*&F)F,F5F,F,*&F2F,&F.6#\"\"'F,
F,F,)F=\"#7F,F,*&,**&F2F,&F.6#\"\"(F,F,*&F:F,FNF,F,*&F)F,FBF,F,F5F,F,)
F=\"#6F,F,*&,**&F)F,FNF,F,FBF,*&F2F,&F.6#\"\")F,F,*&F:F,FVF,F,F,)F=\"#
5F,F,*&,**&F)F,FVF,F,*&F2F,&F.6#\"\"*F,F,FNF,*&F:F,F[oF,F,F,)F=FgoF,F,
*&,**&F2F,&F.6#F`oF,F,*&F:F,FeoF,F,*&F)F,F[oF,F,FVF,F,)F=F]oF,F,*&,**&
F)F,FeoF,F,F[oF,*&F:F,F]pF,F,*&F2F,&F.6#FfnF,F,F,)F=FXF,F,*&,*FeoF,*&F
)F,F]pF,F,*&F:F,FgpF,F,*&F2F,&F.6#FRF,F,F,)F=FPF,F,*&,**&F:F,F_qF,F,F]
pF,*&F)F,FgpF,F,*&F2F,&F.6#FHF,F,F,)F=FDF,F,*&,**&F)F,F_qF,F,FgpF,*&F2
F,&F.6#F>F,F,*&F:F,FgqF,F,F,)F=F7F,F,*&,**&F)F,FgqF,F,*&F:F,F^rF,F,F_q
F,*&F2F,&F.6#\"\"!F,F,F,)F=F4F,F,*&,**&F)F,F^rF,F,FgqF,*&F2F,F8F,F,*&F
:F,FgrF,F,F,)F=F0F,F,*&,*F^rF,*&F)F,FgrF,F,*&F2F,F-F,F,*&F:F,F8F,F,F,F
=F,F,*&F2F,F;F,F,FgrF,*&F:F,F-F,F,*&F)F,F8F,F," }}}{EXCHG {PARA 0 "" 
0 "" {TEXT -1 55 "Calcule les \351quations \340 r\351soudre, liste les
 valeurs de " }{XPPEDIT 18 0 "epsilon;" "6#%(epsilonG" }{TEXT -1 15 " \+
connues, pour " }{XPPEDIT 18 0 "i = 1;" "6#/%\"iG\"\"\"" }{TEXT -1 5 "
 ... " }{XPPEDIT 18 0 "2*t;" "6#*&\"\"#\"\"\"%\"tGF%" }{TEXT -1 29 ", \+
puis \351value les \351quations :" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 160 "list_eqn1 := \{seq( coeff(eqn,Z,i), i=n-t..n-1 )\}:
\nepsilon_connu := \{seq( epsilon[i] = Syndi(p_recu,i), i=1..2*t )\};
\neqn_eval1 := eval(list_eqn1, epsilon_connu);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#>%.epsilon_connuG<(/&%(epsilonG6#\"\"#,&*$)%&alphaG\"\"
$\"\"\"F0*$)F.F*F0F0/&F(6#F0F,/&F(6#\"\"',&F,F0F0F0/&F(6#\"\"&F0/&F(6#
\"\"%,*F,F0F1F0F.F0F0F0/&F(6#F/,(F,F0F.F0F0F0" }}{PARA 12 "" 1 "" 
{XPPMATH 20 "6#>%*eqn_eval1G<%,.*&&%&sigmaG6#\"\"\"F+,**$)%&alphaG\"\"
$F+F+*$)F/\"\"#F+F+F/F+F+F+F+F+F-F+F/F+F+F+*&&F)6#F0F+,&F-F+F+F+F+F+&F
)6#F3F+,,*&F8F+F,F+F+F-F+F1F+F5F+*&F(F+,(F-F+F/F+F+F+F+F+,*F-F+*&F5F+F
,F+F+*&F8F+F=F+F+*&F(F+,&F-F+F1F+F+F+" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 42 "Met sous forme matricielle les \351quations :" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 212 "m1 := matrix(t,t):\nb1 := vector(t
):\ni := 1:\nfor eq in eqn_eval1 do\n   for j from 1 to t do\n       m
1[i,j] := coeff(eq,sigma[j],1);\n   end do:\n   b1[i] := eval( eq, [se
q(sigma[k]=0,k=1..t)] );\n   i := i+1:\nend do:" }}}{EXCHG {PARA 0 "" 
0 "" {TEXT -1 23 "Calcule les valeurs de " }{XPPEDIT 18 0 "sigma;" "6#
%&sigmaG" }{TEXT -1 26 " en r\351solvant le syst\350me :" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 92 "sigma_val := Linsolve(m1,b1) mod 2:
\nsigma_connu := \{ seq(sigma[i]=sigma_val[i], i = 1..t) \};" }}{PARA 
11 "" 1 "" {XPPMATH 20 "6#>%,sigma_connuG<%/&%&sigmaG6#\"\"\",&*$)%&al
phaG\"\"$F*F*F*F*/&F(6#\"\"#,(F,F**$)F.F3F*F*F.F*/&F(6#F/,&F5F*F*F*" }
}}{EXCHG {PARA 256 "" 0 "" {TEXT 262 31 "[...] Suite du script pr\351c
\351dent" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 260 11 "2e partie :" }{TEXT 
261 1 " " }{TEXT -1 30 "R\351solution des \351quations pour " }
{XPPEDIT 18 0 "i = 0;" "6#/%\"iG\"\"!" }{TEXT -1 5 " ... " }{XPPEDIT 
18 0 "n-2*t-1;" "6#,(%\"nG\"\"\"*&\"\"#F%%\"tGF%!\"\"F%F)" }{TEXT -1 
14 " pour trouver " }{XPPEDIT 18 0 "epsilon;" "6#%(epsilonG" }{TEXT 
-1 5 "[0], " }{XPPEDIT 18 0 "epsilon;" "6#%(epsilonG" }{TEXT -1 11 "[2
t+1] ... " }{XPPEDIT 18 0 "epsilon;" "6#%(epsilonG" }{TEXT -1 5 "[n-1]
" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 27 "Calcule les \351quations pour
 " }{XPPEDIT 18 0 "i = 0;" "6#/%\"iG\"\"!" }{TEXT -1 5 " ... " }
{XPPEDIT 18 0 "n-2*t-1;" "6#,(%\"nG\"\"\"*&\"\"#F%%\"tGF%!\"\"F%F)" }
{TEXT -1 19 ", puis les \351value :" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 139 "list_eqn2 := \{seq( coeff(eqn,Z,i), i=0..n-2*t-1 )\}
:\neqn_eval2 := eval(list_eqn2, epsilon_connu):\neqn_eval2 := eval(eqn
_eval2, sigma_connu);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#>%*eqn_eval2G
<+,**&,(*$)%&alphaG\"\"$\"\"\"F-*$)F+\"\"#F-F-F+F-F-&%(epsilonG6#\"#9F
-F-&F26#\"#7F-*&,&F)F-F-F-F-&F26#\"#8F-F-*&,&F.F-F-F-F-&F26#\"\"!F-F-,
*F1F-*&F9F-F?F-F-*&F>F-,&F)F-F.F-F-F-*&F(F-F*F-F-,*F:F-*&F9F-F1F-F-*&F
(F-F?F-F-*&F>F-F*F-F-,*F?F-*&F(F-FEF-F-*&,(F)F-F+F-F-F-F-F>F-F-*&F9F-F
*F-F-,*&F26#\"#6F-*&F>F-F1F-F-*&F(F-F:F-F-*&F9F-F5F-F-,*&F26#\"#5F-*&F
9F-FQF-F-*&F>F-F:F-F-*&F(F-F5F-F-,*&F26#\"\")F-*&F9F-&F26#\"\"*F-F-*&F
(F-FXF-F-*&F>F-FQF-F-,**&F>F-F5F-F-*&F(F-FQF-F-*&F9F-FXF-F-F]oF-,**&F>
F-FXF-F-&F26#\"\"(F-*&F(F-F]oF-F-*&F9F-FinF-F-" }}}{EXCHG {PARA 0 "" 
0 "" {TEXT -1 42 "Met sous forme matricielle les \351quations :" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 372 "# les indices de epsilon a \+
calculer\nepsilon_indices := [0,seq(i, i=2*t+1..n-1)]: \nm2 := matrix(
n-2*t,n-2*t):\nb2 := vector(n-2*t):\ni := 1:\nfor eq in eqn_eval2 do\n
   j:= 1:\n   for index in epsilon_indices do\n       m2[i,j] := coeff
(eq,epsilon[index],1):\n       j := j+1;\n   end do:\n   b2[i] := eval
( eq, [epsilon[0]=0, seq(epsilon[k]=0,k=2*t+1..n-1)] );\n   i := i+1:
\nend do:" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 23 "Calcule les valeurs \+
de " }{XPPEDIT 18 0 "epsilon" "6#%(epsilonG" }{TEXT -1 5 "[0], " }
{XPPEDIT 18 0 "epsilon" "6#%(epsilonG" }{TEXT -1 11 "[2t+1] ... " }
{XPPEDIT 18 0 "epsilon" "6#%(epsilonG" }{TEXT -1 42 "[n-1], puis regro
upe toutes les valeurs : " }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
137 "epsilon_val := Linsolve(m2,b2) mod 2:\nepsilon_val := [epsilon_va
l[1], seq(Syndi(p_recu,it),it=1..2*t), seq(epsilon_val[it],it=2..n-2*t
)];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%,epsilon_valG71\"\"\"*$)%&alp
haG\"\"$F&,&F'F&*$)F)\"\"#F&F&,(F'F&F)F&F&F&,*F'F&F,F&F)F&F&F&F&,&F'F&
F&F&F/,&F'F&F)F&,(F'F&F,F&F)F&F&F3,(F'F&F,F&F&F&F4F1" }}}{EXCHG {PARA 
0 "" 0 "" {TEXT -1 75 "On peut maintenant d\351terminer l'erreur par t
ransform\351e de Fourier inverse :" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 125 "erreurs := Normal( TFD(epsilon_val,-1) ) mod 2;\nmot
_corrige := mot_transmis - erreurs mod 2:\nevalb( mot_corrige = mot_co
de );" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%(erreursG71\"\"!F&F&F&F&F&F
&F&F&F&F&\"\"\"F'F&F'" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%%trueG" }}}}
{MARK "36 0 4" 19 }{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }{PAGENUMBERS 0 1 
2 33 1 1 }
